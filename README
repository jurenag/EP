Regardless which folder you access, entanglement_2x2 or entanglement_2x2x2 you will see a 'modules' folder, which hosts .py files which are basically the libraries of functions that I've coded. The structure of the libraries is, in both 'modules' folders, pretty similar. BUT, since in the case of entanglement_2x2 I've been working with density matrices, the number of columns read by file_to_numpyarray(N,...) is 2*N*N. However, in the case of entanglement_2x2x2, since I worked with vector states, the number of columns read by file_to_numpyarray(N,...) is 2*N. Of course this is a bad idea. file_to_numpyarray() should receive a number N of columns to read and avoid interpreting the number N of columns to read depending on whether we are working with density matrices or vector states. A natural step to take now would be to unify both libraries, so that the most important function binaryOutput_formatData_trainNN_averageLoss_averageTestResults_and_writeResults takes the usual hilbert space dimension, N, and a (new) boolean parameter like working_w_vector_states, so that if working_w_vector_states==True, then the function calls file_to_numpyarray(2*N,...). The function calls file_to_numpyarray(2*N*N,...).
